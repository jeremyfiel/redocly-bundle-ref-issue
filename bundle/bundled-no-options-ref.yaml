openapi: 3.0.2
info:
  title: APIGateway
  version: v1
servers:
  - url: https://au-api.example.com
paths:
  /api/v1/cards:
    get:
      tags:
        - Card
      summary: "Gets a list of cards for a client.\r\nThe result only contains cards whose version is greater than lastRowVer."
      parameters:
        - name: Authorization
          in: header
          description: Auth Token
          required: true
          schema:
            type: string
        - name: lastRowVer
          in: query
          description: The last row version of the cards to return
          schema:
            type: integer
            format: int64
            default: 0
        - name: includes
          in: query
          description: A comma-separated list of properties to include in the response.
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardListJson'
        '400':
          description: 400 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicDocsErrorResponse'
        '401':
          description: 401 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content: {}
        '403':
          description: 403 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content: {}
        '404':
          description: 404 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content: {}
        '429':
          description: 429 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content: {}
        '500':
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicDocsErrorResponse'
        '504':
          description: 504 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content: {}
      security:
        - CustomAuthAuthorizer: []
        - api_key: []
      x-amazon-apigateway-integration:
        httpMethod: GET
        uri: https://${stageVariables.ApiUrl}/api/v1/matters
        responses:
          '200':
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
          '400':
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
          '401':
            statusCode: '401'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
          '403':
            statusCode: '403'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
          '404':
            statusCode: '404'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
          '429':
            statusCode: '429'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
          '504':
            statusCode: '504'
          default:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.querystring.lastRowVer: method.request.querystring.lastRowVer
          integration.request.querystring.includes: method.request.querystring.includes
          integration.request.header.Access-Control-Allow-Origin: '''*'''
          integration.request.header.Authorization: method.request.header.Authorization
          integration.request.header.api-gateway-key: '''dummy-api-key-12345'''
        passthroughBehavior: when_no_match
        type: http
      x-leap:
        operationId: Card_GetCards
        permissions:
          - Cards
        description: "Gets a list of cards for a client.\r\nThe result only contains cards whose version is greater than lastRowVer."
    options:
      summary: this is my options summary
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''GET,PUT,POST,DELETE,PATCH,OPTIONS'''
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: when_no_match
        type: mock
  /api/v3/matters:
    get:
      tags:
        - Matters
      summary: Get matters.
      parameters:
        - name: includeCustomFields
          in: query
          description: Null = included; True = included; False = Not included
          schema:
            type: string
        - name: rowVersion
          in: query
          description: Lookup field
          schema:
            type: string
        - name: isArchived
          in: query
          description: Filter value for isArchived property (default is no filter)
          schema:
            type: string
        - name: maxItems
          in: query
          description: Amount of matters to return (max of 10000)
          schema:
            type: string
        - name: isCurrent
          in: query
          description: Filter value for isCurrent property (default is no filter)
          schema:
            type: string
        - name: Authorization
          in: header
          description: Auth Token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatterListResponseNew'
      security:
        - CustomAuthAuthorizer: []
        - api_key: []
      x-amazon-apigateway-integration:
        httpMethod: GET
        uri: https://${stageVariables.PublicApiUrl}/api/v1/matters
        responses:
          '200':
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
          '400':
            statusCode: '400'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
          '401':
            statusCode: '401'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
          '403':
            statusCode: '403'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
          '404':
            statusCode: '404'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
          '429':
            statusCode: '429'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
          '504':
            statusCode: '504'
          default:
            statusCode: '500'
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestParameters:
          integration.request.querystring.includeCustomFields: method.request.querystring.includeCustomFields
          integration.request.querystring.maxItems: method.request.querystring.maxItems
          integration.request.header.Access-Control-Allow-Origin: '''*'''
          integration.request.header.Authorization: method.request.header.Authorization
          integration.request.header.api-gateway-key: '''dummy-api-key-12345'''
          integration.request.querystring.isCurrent: method.request.querystring.isCurrent
          integration.request.querystring.isArchived: method.request.querystring.isArchived
          integration.request.querystring.rowVersion: method.request.querystring.rowVersion
        passthroughBehavior: when_no_match
        type: http
      x-leap:
        operationId: getMatters
        permissions:
          - Matters
        description: Return a list of all matters.
    options:
      summary: this is my options summary
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''GET,PUT,POST,DELETE,PATCH,OPTIONS'''
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: when_no_match
        type: mock
components:
  schemas:
    PublicDocsErrorResponse:
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
    CardListJson:
      type: object
      properties:
        total:
          type: integer
          format: int32
          readOnly: true
        lastRowVer:
          type: integer
          format: int64
        data:
          type: array
          items:
            type: object
            additionalProperties: {}
          nullable: true
      additionalProperties: false
    MatterListItemWithRowVersion:
      type: object
      properties:
        rowVersion:
          type: integer
          format: int64
        matterId:
          type: string
          format: uuid
        fileNumber:
          type: string
        firstDescription:
          type: string
        secondDescription:
          type: string
        customDescription:
          type: string
        matterTypeName:
          type: string
        matterTypeId:
          type: string
        matterStatus:
          type: string
        isCurrent:
          type: boolean
        state:
          type: string
        responsibleStaffId:
          type: string
          format: uuid
        creditStaffId:
          type: string
          format: uuid
        actingStaffId:
          type: string
          format: uuid
        assistingStaffId:
          type: string
          format: uuid
        isArchived:
          type: boolean
        deleted:
          type: boolean
        version:
          type: integer
          format: int32
        instructionDate:
          type: string
          format: date-time
        billingMode:
          type: integer
          format: int32
        archiveDate:
          type: string
          format: date-time
        isMatterAccessible:
          type: boolean
        matterFileName:
          type: string
      additionalProperties: false
    MatterListResponseNew:
      type: object
      properties:
        matterList:
          type: array
          items:
            $ref: '#/components/schemas/MatterListItemWithRowVersion'
        lastRowVersion:
          type: integer
          format: int64
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: x-api-key
    CustomAuthAuthorizer:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        authorizerUri: arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-2:123456789012:function:custom-auth-authorizer/invocations
        authorizerResultTtlInSeconds: 0
        identitySource: method.request.header.Authorization
        type: request
